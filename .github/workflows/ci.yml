name: CI/CD - Test, Lint, Build

on:
  push:
    branches:
      - main
      - master
      - "feature/**"
  pull_request:
    branches:
      - main
      - master

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run ESLint
        run: bun run lint
        continue-on-error: false

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run TypeScript type check
        run: bun run typecheck
        continue-on-error: false

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, typecheck]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run build
        continue-on-error: false

      - name: Verify build artifacts
        run: |
          test -f dist/index.js || (echo "dist/index.js not found" && exit 1)
          test -f dist/index.d.ts || (echo "dist/index.d.ts not found" && exit 1)
          head -1 dist/index.js | grep -q "#!/usr/bin/env node" || (echo "Shebang missing" && exit 1)
          echo "✓ Build artifacts verified"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/
          retention-days: 1

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests (non-integration)
        run: |
          # Run all tests, skip integration tests that require Anki
          bun test --timeout 10000 2>&1 | tee test-output.log

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-output.log
          retention-days: 7

  compatibility-check:
    name: Check npm/bun Compatibility
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run build

      - name: Test executable with node
        run: |
          echo '{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{}}' | node dist/index.js 2>&1 | head -20

      - name: Verify package.json configuration
        run: |
          node -e "
            const pkg = require('./package.json');
            const checks = [
              { field: 'main', expected: 'dist/index.js', found: pkg.main },
              { field: 'types', expected: 'dist/index.d.ts', found: pkg.types },
              { field: 'bin.mankey', expected: 'dist/index.js', found: pkg.bin.mankey },
              { field: 'publishConfig.access', expected: 'public', found: pkg.publishConfig.access }
            ];

            let allPassed = true;
            checks.forEach(check => {
              const passed = check.found === check.expected;
              console.log(passed ? '✓' : '✗', check.field, '=', check.found);
              if (!passed) allPassed = false;
            });

            process.exit(allPassed ? 0 : 1);
          "

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, build, test, compatibility-check]
    if: always()

    steps:
      - name: Check job statuses
        run: |
          echo "=== CI/CD Summary ==="
          echo "Lint: ${{ needs.lint.result }}"
          echo "Type Check: ${{ needs.typecheck.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Tests: ${{ needs.test.result }}"
          echo "Compatibility: ${{ needs.compatibility-check.result }}"

      - name: Fail if any job failed
        if: |
          needs.lint.result == 'failure' ||
          needs.typecheck.result == 'failure' ||
          needs.build.result == 'failure' ||
          needs.test.result == 'failure' ||
          needs.compatibility-check.result == 'failure'
        run: exit 1
